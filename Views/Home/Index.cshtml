@{
    ViewData["Title"] = "Dashboard";
}

<div id="alertContainer"></div>

<div class="row mb-4">
    <div class="col-md-12">
        <div class="d-flex justify-content-between align-items-center">
            <h1><i class="bi bi-speedometer2"></i> CT600 Submissions Dashboard</h1>
            <button class="btn btn-primary" onclick="refreshData()">
                <i class="bi bi-arrow-clockwise"></i> Refresh
            </button>
        </div>
    </div>
</div>

<div class="row mb-3">
    <div class="col-md-4">
        <div class="card bg-primary text-white">
            <div class="card-body">
                <h5 class="card-title">Total Submissions</h5>
                <h2 id="totalCount" class="mb-0">-</h2>
            </div>
        </div>
    </div>
    <div class="col-md-4">
        <div class="card bg-success text-white">
            <div class="card-body">
                <h5 class="card-title">Submitted</h5>
                <h2 id="submittedCount" class="mb-0">-</h2>
            </div>
        </div>
    </div>
    <div class="col-md-4">
        <div class="card bg-warning text-white">
            <div class="card-body">
                <h5 class="card-title">Draft</h5>
                <h2 id="draftCount" class="mb-0">-</h2>
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-md-12">
        <div class="card">
            <div class="card-header bg-primary text-white">
                <h5 class="mb-0"><i class="bi bi-table"></i> CT600 Records</h5>
            </div>
            <div class="card-body">
                <div id="loadingSpinner" class="text-center py-5">
                    <div class="spinner-border text-primary" role="status">
                        <span class="visually-hidden">Loading...</span>
                    </div>
                    <p class="mt-2">Loading CT600 data...</p>
                </div>
                <div id="dataTable" style="display: none;">
                    <div class="table-responsive">
                        <table class="table table-striped table-hover">
                            <thead>
                                <tr>
                                    <th>Company Name</th>
                                    <th>Tax Reference</th>
                                    <th>Period</th>
                                    <th>Turnover</th>
                                    <th>Tax Due</th>
                                    <th>Status</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody id="tableBody">
                            </tbody>
                        </table>
                    </div>
                </div>
                <div id="errorMessage" class="alert alert-danger" style="display: none;"></div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            loadData();
        });

        function loadData() {
            $('#loadingSpinner').show();
            $('#dataTable').hide();
            $('#errorMessage').hide();

            $.ajax({
                url: API_BASE_URL + '/api/ct600',
                method: 'GET',
                success: function(data) {
                    displayData(data);
                    updateStatistics(data);
                    $('#loadingSpinner').hide();
                    $('#dataTable').show();
                },
                error: function(xhr) {
                    $('#loadingSpinner').hide();
                    const errorMsg = xhr.responseJSON?.error || 'Failed to load CT600 data';
                    $('#errorMessage').text(errorMsg).show();
                }
            });
        }

        function displayData(data) {
            const tbody = $('#tableBody');
            tbody.empty();

            if (data.length === 0) {
                tbody.append('<tr><td colspan="7" class="text-center">No CT600 records found</td></tr>');
                return;
            }

            data.forEach(function(record) {
                const periodStart = new Date(record.periodStart).toLocaleDateString();
                const periodEnd = new Date(record.periodEnd).toLocaleDateString();
                const turnover = record.turnover.toLocaleString('en-GB', { style: 'currency', currency: 'GBP' });
                const taxDue = record.taxDue.toLocaleString('en-GB', { style: 'currency', currency: 'GBP' });
                
                const statusBadge = getStatusBadge(record.status);
                
                const row = `
                    <tr>
                        <td>${escapeHtml(record.companyName)}</td>
                        <td><code>${escapeHtml(record.taxReference)}</code></td>
                        <td><small>${periodStart} - ${periodEnd}</small></td>
                        <td>${turnover}</td>
                        <td><strong>${taxDue}</strong></td>
                        <td>${statusBadge}</td>
                        <td>
                            <a href="/Home/Detail?id=${encodeURIComponent(record.taxReference)}" 
                               class="btn btn-sm btn-primary btn-action">
                                <i class="bi bi-eye"></i> View
                            </a>
                            ${getActionButtons(record)}
                        </td>
                    </tr>
                `;
                tbody.append(row);
            });
        }

        function getStatusBadge(status) {
            const badges = {
                'Draft': 'badge bg-secondary',
                'Submitted': 'badge bg-success',
                'Pending': 'badge bg-warning',
                'Approved': 'badge bg-info',
                'Rejected': 'badge bg-danger'
            };
            const badgeClass = badges[status] || 'badge bg-secondary';
            return `<span class="${badgeClass} status-badge">${escapeHtml(status)}</span>`;
        }

        function getActionButtons(record) {
            if (record.status === 'Draft') {
                return `
                    <button class="btn btn-sm btn-success btn-action" 
                            onclick="submitCT600('${escapeHtml(record.taxReference)}')">
                        <i class="bi bi-send"></i> Submit
                    </button>
                `;
            } else if (record.status === 'Submitted' && record.submissionReference) {
                return `
                    <button class="btn btn-sm btn-info btn-action" 
                            onclick="checkStatus('${escapeHtml(record.taxReference)}')">
                        <i class="bi bi-info-circle"></i> Status
                    </button>
                `;
            }
            return '';
        }

        function updateStatistics(data) {
            const total = data.length;
            const submitted = data.filter(r => r.status === 'Submitted').length;
            const draft = data.filter(r => r.status === 'Draft').length;

            $('#totalCount').text(total);
            $('#submittedCount').text(submitted);
            $('#draftCount').text(draft);
        }

        function refreshData() {
            showAlert('Refreshing data...', 'info');
            loadData();
        }

        function submitCT600(taxReference) {
            if (!confirm('Are you sure you want to submit this CT600 to HMRC?')) {
                return;
            }

            showAlert('Submitting CT600...', 'info');

            $.ajax({
                url: API_BASE_URL + '/api/ct600/' + encodeURIComponent(taxReference) + '/submit',
                method: 'POST',
                success: function(response) {
                    showAlert('CT600 submitted successfully! Reference: ' + response.submissionReference, 'success');
                    loadData();
                },
                error: function(xhr) {
                    const errorMsg = xhr.responseJSON?.error || 'Failed to submit CT600';
                    showAlert(errorMsg, 'danger');
                }
            });
        }

        function checkStatus(taxReference) {
            showAlert('Checking submission status...', 'info');

            $.ajax({
                url: API_BASE_URL + '/api/ct600/' + encodeURIComponent(taxReference) + '/status',
                method: 'GET',
                success: function(response) {
                    const statusMsg = `Status: ${response.status}<br>Date: ${new Date(response.statusDate).toLocaleString()}`;
                    showAlert(statusMsg, 'info');
                },
                error: function(xhr) {
                    const errorMsg = xhr.responseJSON?.error || 'Failed to check status';
                    showAlert(errorMsg, 'danger');
                }
            });
        }

        function escapeHtml(text) {
            const map = {
                '&': '&amp;',
                '<': '&lt;',
                '>': '&gt;',
                '"': '&quot;',
                "'": '&#039;'
            };
            return text.replace(/[&<>"']/g, function(m) { return map[m]; });
        }
    </script>
}
